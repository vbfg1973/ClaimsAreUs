// <auto-generated />
using System;
using ClaimsAreUs.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClaimsAreUs.Data.Migrations
{
    [DbContext(typeof(ClaimsAreUsContext))]
    [Migration("20230511162934_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClaimsAreUs.Data.Models.Claim", b =>
                {
                    b.Property<string>("UCR")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AssuredName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ClaimDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Closed")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<decimal>("IncurredLoss")
                        .HasPrecision(15, 2)
                        .HasColumnType("decimal(15,2)");

                    b.Property<DateTime>("LossDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UCR");

                    b.HasIndex("CompanyId");

                    b.ToTable("Claims");

                    b.HasData(
                        new
                        {
                            UCR = "UCR_4a0e5e71",
                            AssuredName = "Dave Dealer",
                            ClaimDate = new DateTime(2014, 5, 11, 16, 29, 34, 331, DateTimeKind.Utc).AddTicks(6713),
                            Closed = true,
                            CompanyId = 1,
                            IncurredLoss = 4000m,
                            LossDate = new DateTime(2014, 5, 10, 16, 29, 34, 331, DateTimeKind.Utc).AddTicks(6713)
                        },
                        new
                        {
                            UCR = "UCR_1deca533",
                            AssuredName = "Dave Dealer",
                            ClaimDate = new DateTime(2018, 5, 11, 16, 29, 34, 331, DateTimeKind.Utc).AddTicks(6713),
                            Closed = true,
                            CompanyId = 1,
                            IncurredLoss = 10000m,
                            LossDate = new DateTime(2018, 5, 6, 16, 29, 34, 331, DateTimeKind.Utc).AddTicks(6713)
                        },
                        new
                        {
                            UCR = "UCR_5f079de3",
                            AssuredName = "Dave Dealer",
                            ClaimDate = new DateTime(2023, 5, 11, 16, 29, 34, 331, DateTimeKind.Utc).AddTicks(6713),
                            Closed = false,
                            CompanyId = 1,
                            IncurredLoss = 40000m,
                            LossDate = new DateTime(2023, 5, 10, 16, 29, 34, 331, DateTimeKind.Utc).AddTicks(6713)
                        },
                        new
                        {
                            UCR = "UCR_0d2f71d2",
                            AssuredName = "Brian Bodger",
                            ClaimDate = new DateTime(2016, 5, 11, 16, 29, 34, 331, DateTimeKind.Utc).AddTicks(6713),
                            Closed = true,
                            CompanyId = 2,
                            IncurredLoss = 400m,
                            LossDate = new DateTime(2016, 5, 8, 16, 29, 34, 331, DateTimeKind.Utc).AddTicks(6713)
                        },
                        new
                        {
                            UCR = "UCR_8619246c",
                            AssuredName = "Brian Bodger",
                            ClaimDate = new DateTime(2021, 5, 11, 16, 29, 34, 331, DateTimeKind.Utc).AddTicks(6713),
                            Closed = true,
                            CompanyId = 2,
                            IncurredLoss = 1000m,
                            LossDate = new DateTime(2021, 5, 10, 16, 29, 34, 331, DateTimeKind.Utc).AddTicks(6713)
                        },
                        new
                        {
                            UCR = "UCR_921ab7c6",
                            AssuredName = "Brian Bodger",
                            ClaimDate = new DateTime(2023, 5, 11, 16, 29, 34, 331, DateTimeKind.Utc).AddTicks(6713),
                            Closed = false,
                            CompanyId = 2,
                            IncurredLoss = 4000m,
                            LossDate = new DateTime(2023, 5, 6, 16, 29, 34, 331, DateTimeKind.Utc).AddTicks(6713)
                        });
                });

            modelBuilder.Entity("ClaimsAreUs.Data.Models.ClaimType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("ClaimTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Legal Expense"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Liability"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Property"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Tax"
                        });
                });

            modelBuilder.Entity("ClaimsAreUs.Data.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Address2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Address3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("InsuranceEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Address1 = "1 Car Dealer Avenue",
                            Address2 = "Bradford",
                            Country = "United Kingdom",
                            InsuranceEndDate = new DateTime(2025, 5, 11, 16, 29, 34, 331, DateTimeKind.Utc).AddTicks(6713),
                            Name = "Dave's Dodgy Dealer",
                            PostCode = "BD1 1AA"
                        },
                        new
                        {
                            Id = 2,
                            Active = false,
                            Address1 = "2 Car Dealer Avenue",
                            Address2 = "Bradford",
                            Country = "United Kingdom",
                            InsuranceEndDate = new DateTime(2022, 5, 11, 16, 29, 34, 331, DateTimeKind.Utc).AddTicks(6713),
                            Name = "Brian's Bodged Bangers",
                            PostCode = "BD1 1AA"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Address1 = "3-100 Car Dealer Avenue",
                            Address2 = "Bradford",
                            Country = "United Kingdom",
                            InsuranceEndDate = new DateTime(2033, 5, 11, 16, 29, 34, 331, DateTimeKind.Utc).AddTicks(6713),
                            Name = "Honest Chris' Cozy Cars",
                            PostCode = "BD1 1AA"
                        });
                });

            modelBuilder.Entity("ClaimsAreUs.Data.Models.Claim", b =>
                {
                    b.HasOne("ClaimsAreUs.Data.Models.Company", "Company")
                        .WithMany("Claims")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("ClaimsAreUs.Data.Models.Company", b =>
                {
                    b.Navigation("Claims");
                });
#pragma warning restore 612, 618
        }
    }
}
